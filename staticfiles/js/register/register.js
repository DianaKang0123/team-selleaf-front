// 회원가입 페이지 용 js
/*
    클래스 add, remove를 이용한 스타일 변화


    ※ 모든 input란

    - keyup, blur

        각 input 별 조건(정규식)을 만족하지 않으면
        특정 태그에 .error 클래스 toggle

        .error에 대한 스타일 관리는 css에서


        -> 입력창 위 h1 태그 텍스트와 border-color,
           focus 되었을 때의 box-shadow 색 변경
           + 각 input의 wrap 아래에 빨간색 경고 텍스트(div) 추가
           
           맨 아래 이용약관은 h1 텍스트와
           terms-container의 border 색만 변경


    ※ 이메일

    - keyup, blur

        앞쪽 직접 입력란과 뒤쪽 드롭박스(선택해주세요 or 직접 입력에 값 없을 때)중 하나라도 값이 없을 경우
            -> 양쪽과 h1 텍스트에 .error toggle, 이메일 인증버튼에 .enabled 클래스 remove

            * 나중에는 keyup 이벤트로 실시간으로 데이터 송수신해서 띄우기


        값이 뭐라도 생기면 아래쪽 인증버튼에 .enabled 클래스 toggle
            -> border와 color, background-color 변경

        * 드롭박스 쪽 직접입력
            -> 이거 선택하면 input 창으로 바뀌는 건 어떻게 하는 건가...
                해당 option 안에 input 태그를 넣나?


    ※ 이메일 인증 버튼

        위 이메일 이벤트로 인해 .enabled 속성이 있을 경우에만(if) 이벤트 실행


    ※ 비밀번호

    - keyup, blur

        정규식(0-9,a-z,A-Z / 8자리 이상) 만족 안 하면 .error toggle
        만족하는 즉시 .error 삭제


    ※ 비밀번호 확인

        위쪽 비번 이벤트 + keyup 될 때 비밀번호 값 가지고 와서 비교
            -> 불일치 시 .error toggle, 일치 시 .error 삭제


    ※ 주소지

        이메일과 마찬가지로, 앞, 뒤 드롭박스 중 하나라도 미선택 시 양쪽에 .error 추가


        * 앞쪽 드롭박스(도 지역, 광역시, 서울, 제주)에 맞춰서
            뒤쪽 드롭박스 내용(도 지역이면 시/군/구, 나머지는 구/동 etc...)이 결정됨

            - 문제점들 -

                1. 앞쪽 드롭박스 선택 안 되어 있는 상태면 뒤쪽은 disabled?

                2. 보통 앞쪽 선택을 바꾸면, 뒤쪽은 다시 "선택해주세요" 로 바뀌는 사이트가 많은데,
                    그걸 어떻게 구현하지?

                3. 아니면 그냥 맨 위에 적은 걸 초기값으로 두고
                    (예시 - '서울시' '강남구' 같이 각 드롭박스 별로 처음에 표시되는 걸 따로 설정하고) 
                    앞쪽 선택 바뀌면, 그에 따라 뒤쪽 드롭박스의 첫번째 요소가 보이게?

                4. 그리고 앞쪽 선택에 따라 뒤쪽 내용이 바뀌는데, 이건 innerHTML 넣어서(=) 구현할까?

                5. 각 지역별 드롭박스 데이터는 어떻게?
                    option 태그 객체(createElement)랑 배열(세부지역) 만들어놓고
                    forEach 돌면서 select 태그 내에 option 태그 value랑 innerText 새로운 걸로 할당(=)?

                    세부 지역들로 배열들(앞쪽 드롭박스 별로 따로) 만들어 놓음
                        -> 앞쪽 드롭박스 option의 value를 받아서, 그에 따라 순회할 배열 결정
                        -> forEach 돌려서 option 태그에 담은 다음, 특정 상수(초기값 빈 문자열)에 하나씩 추가(+=) 
                        -> 반복문 끝나면(= 다 만들어지면) select 태그의 innerHTML로 넣음

                        이런 식으로 하면 될 듯?


            - 결론 -

                3에 적은 대로 "선택해주세요" 없이 초기값 따로 두는 게 작업하기 편할 듯.
                그렇게 하는 사이트들이 많기도 하고.
    
                
    ※ 닉네임

    - keyup, blur

        정규식(0-9,a-z,A-Z / 2자리 이상 15자리 이하) 만족 안 하면 .error toggle
        만족하는 즉시 .error 삭제


    ※ 약관동의

    - click

        체크됨 - .enabled 클래스 toggle + input value = true
        체크 해제 - .enabled 클래스 삭제 + input value = false

            -> 체크 on/off는 toggle만 써도 해결 가능?

        전체동의 체크하면 나머지 모두 체크
        하나라도 체크 안 되면 전체동의 체크 해제

        나머지는 클릭하면 해당요소 체크, 체크된 채로 클릭하면 해제
        
        * 주의 : 색상 외에도 여러 가지 css 속성이 바뀜. 따로 선택자 만들어서 전부 집어넣을 것


        필수 동의 사항은 span 태그 안 span 태그(체크박스 옆 글자)에 required 속성 붙어있음
        click 이벤트 발생 시점에 이걸 가져와서 유효성 체크?
        아니면 단순히 필수 체크박스(input) 전부 가져온 다음에, 하나라도 false인지 검사?

        유효성에 어긋나면 h1 텍스트(이용약관)와 container에 .error를 toggle


    ※ 회원가입 버튼(최종)

    - click 이외에 필요 없음?

        클릭하면 위 요소들 유효성 검사 실행 - 조건 불만족한 부분만 .error 추가
            -> 위쪽 이벤트(addEventListener)들을 전부 변수에 담을 수 있나?
                된다면 다 가져와서 검사하면 될 거 같은데...
*/

// 지역 별 세부지역을 담을 배열들 - 주소지 파트에서 사용
// 서울특별시 내 세부지역
const seoulList = [
  "종로구",
  "중구",
  "용산구",
  "성동구",
  "광진구",
  "동대문구",
  "중랑구",
  "성북구",
  "강북구",
  "도봉구",
  "노원구",
  "은평구",
  "서대문구",
  "마포구",
  "양천구",
  "강서구",
  "구로구",
  "금천구",
  "영등포구",
  "동작구",
  "관악구",
  "서초구",
  "강남구",
  "송파구",
  "강동구",
];

// 부산광역시 내 세부지역
const busanList = [
  "중구",
  "서구",
  "동구",
  "영도구",
  "부산진구",
  "동래구",
  "남구",
  "북구",
  "해운대구",
  "사하구",
  "금정구",
  "강서구",
  "연제구",
  "수영구",
  "사상구",
  "기장군",
];

// 대구광역시 내 세부지역
const daeguList = [
  "중구",
  "동구",
  "서구",
  "남구",
  "북구",
  "수성구",
  "달서구",
  "달성군",
];

// 인천광역시 내 세부지역
const incheonList = [
  "중구",
  "동구",
  "남구",
  "미추홀구",
  "연수구",
  "남동구",
  "부평구",
  "계양구",
  "서구",
  "강화군",
  "옹진군",
];

// 광주광역시 내 세부지역
const gwangjuList = ["동구", "서구", "남구", "북구", "광산구"];

// 대전광역시 내 세부 지역
const daejeonList = ["동구", "중구", "서구", "유성구", "대덕구"];

// 울산광역시 내 세부지역
const ulsanList = ["중구", "남구", "동구", "북구", "울주군"];

// 세종특별자치시 내 세부지역
const sejongList = [""];

// 경기도 내 세부지역
const gyeonggiList = [
  "수원시",
  "성남시",
  "고양시",
  "용인시",
  "부천시",
  "안산시",
  "안양시",
  "남양주시",
  "화성시",
  "평택시",
  "의정부시",
  "시흥시",
  "파주시",
  "광명시",
  "김포시",
  "군포시",
  "광주시",
  "이천시",
  "양주시",
  "오산시",
  "구리시",
  "안성시",
  "포천시",
  "의왕시",
  "하남시",
  "여주시",
  "여주군",
  "양평군",
  "동두천시",
  "과천시",
  "가평군",
  "연천군",
];

// 강원도 내 세부지역
const gangwonList = [
  "춘천시",
  "원주시",
  "강릉시",
  "동해시",
  "태백시",
  "속초시",
  "삼척시",
  "홍천군",
  "횡성군",
  "영월군",
  "평창군",
  "정선군",
  "철원군",
  "화천군",
  "양구군",
  "인제군",
  "고성군",
  "양양군",
];

// 충청북도 내 세부지역
const chungBukList = [
  "청주시",
  "충주시",
  "제천시",
  "청원군",
  "보은군",
  "옥천군",
  "영동군",
  "진천군",
  "괴산군",
  "음성군",
  "단양군",
  "증평군",
];

// 충청북도 내 세부지역
const chungNamList = [
  "천안시",
  "공주시",
  "보령시",
  "아산시",
  "서산시",
  "논산시",
  "계룡시",
  "당진시",
  "당진군",
  "금산군",
  "연기군",
  "부여군",
  "서천군",
  "청양군",
  "홍성군",
  "예산군",
  "태안군",
];

// 전라북도 내 세부지역
const jeonBukList = [
  "전주시",
  "군산시",
  "익산시",
  "정읍시",
  "남원시",
  "김제시",
  "완주군",
  "진안군",
  "무주군",
  "장수군",
  "임실군",
  "순창군",
  "고창군",
  "부안군",
];

// 전라북도 내 세부지역
const jeonNamList = [
  "목포시",
  "여수시",
  "순천시",
  "나주시",
  "광양시",
  "담양군",
  "곡성군",
  "구례군",
  "고흥군",
  "보성군",
  "화순군",
  "장흥군",
  "강진군",
  "해남군",
  "영암군",
  "무안군",
  "함평군",
  "영광군",
  "장성군",
  "완도군",
  "진도군",
  "신안군",
];

// 경상북도 내 세부지역
const gyeongBukList = [
  "포항시",
  "경주시",
  "김천시",
  "안동시",
  "구미시",
  "영주시",
  "영천시",
  "상주시",
  "문경시",
  "경산시",
  "군위군",
  "의성군",
  "청송군",
  "영양군",
  "영덕군",
  "청도군",
  "고령군",
  "성주군",
  "칠곡군",
  "예천군",
  "봉화군",
  "울진군",
  "울릉군",
];

// 경상남도 내 세부지역
const gyeongNamList = [
  "창원시",
  "마산시",
  "진주시",
  "진해시",
  "통영시",
  "사천시",
  "김해시",
  "밀양시",
  "거제시",
  "양산시",
  "의령군",
  "함안군",
  "창녕군",
  "고성군",
  "남해군",
  "하동군",
  "산청군",
  "함양군",
  "거창군",
  "합천군",
];

// 제주특별자치도 내 세부지역
const jejuList = ["제주시", "서귀포시", "북제주군", "남제주군"];
